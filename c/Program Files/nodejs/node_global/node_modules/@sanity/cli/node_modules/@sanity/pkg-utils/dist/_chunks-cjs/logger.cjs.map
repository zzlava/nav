{"version":3,"file":"logger.cjs","sources":["../../src/node/fileExists.ts","../../src/node/core/isRecord.ts","../../src/node/core/pkg/validatePkg.ts","../../src/node/logger.ts"],"sourcesContent":["import {statSync} from 'node:fs'\n\n/** @internal */\nexport function fileExists(filePath: string): boolean {\n  try {\n    statSync(filePath)\n\n    return true\n  } catch (_) {\n    return false\n  }\n}\n","/** @internal */\nexport function isRecord(value: unknown): value is Record<string, unknown> {\n  return Boolean(value) && !Array.isArray(value) && typeof value === 'object'\n}\n","import {z} from 'zod'\n\nimport type {PackageJSON} from './types'\n\nconst pkgSchema = z.object({\n  type: z.optional(z.enum(['commonjs', 'module'])),\n  name: z.string(),\n  version: z.string(),\n  license: z.string(),\n  bin: z.optional(z.record(z.string())),\n  dependencies: z.optional(z.record(z.string())),\n  devDependencies: z.optional(z.record(z.string())),\n  peerDependencies: z.optional(z.record(z.string())),\n  source: z.optional(z.string()),\n  main: z.optional(z.string()),\n  browser: z.optional(z.record(z.string())),\n  module: z.optional(z.string()),\n  types: z.optional(z.string()),\n  exports: z.optional(\n    z.record(\n      z.union([\n        z.custom<`./${string}.json`>((val) => /^\\.\\/.*\\.json$/.test(val as string)),\n        z.custom<`./${string}.css`>((val) => /^\\.\\/.*\\.css$/.test(val as string)),\n        z.object({\n          'types': z.optional(z.string()),\n          'source': z.optional(z.string()),\n          'browser': z.optional(\n            z.object({\n              source: z.string(),\n              import: z.optional(z.string()),\n              require: z.optional(z.string()),\n            }),\n          ),\n          'react-compiler': z.optional(\n            // z.union([\n            // @TODO add support for a string shortcut\n            // z.string(),\n            z.object({\n              source: z.optional(z.string()),\n              default: z.string(),\n            }),\n            // ]),\n          ),\n          'node': z.optional(\n            z.object({\n              source: z.optional(z.string()),\n              import: z.optional(z.string()),\n              require: z.optional(z.string()),\n            }),\n          ),\n          'import': z.optional(z.string()),\n          'require': z.optional(z.string()),\n          'default': z.string(),\n        }),\n        z.object({\n          types: z.optional(z.string()),\n          svelte: z.string(),\n          default: z.optional(z.string()),\n        }),\n      ]),\n    ),\n  ),\n  browserslist: z.optional(z.union([z.string(), z.array(z.string())])),\n  sideEffects: z.optional(z.union([z.boolean(), z.array(z.string())])),\n  // @TODO type this properly\n  typesVersions: z.optional(z.any()),\n})\n\n// Create a map over known keys to catch casing mistakes\nconst typoMap = new Map<string, string>()\n\nfor (const key of pkgSchema.keyof()._def.values) {\n  typoMap.set(key.toUpperCase(), key)\n}\n\nexport function validatePkg(input: unknown): PackageJSON {\n  const pkg = pkgSchema.parse(input)\n\n  const invalidKey = Object.keys(input as PackageJSON).find((key) => {\n    const needle = key.toUpperCase()\n\n    return typoMap.has(needle) ? typoMap.get(needle) !== key : false\n  })\n\n  if (invalidKey) {\n    throw new TypeError(\n      `\n- package.json: \"${invalidKey}\" is not a valid key. Did you mean \"${typoMap.get(invalidKey.toUpperCase())}\"?`,\n    )\n  }\n\n  return pkg\n}\n","import chalk from 'chalk'\n\n/** @internal */\nexport interface Logger {\n  log: (...args: unknown[]) => void\n  info: (...args: unknown[]) => void\n  warn: (...args: unknown[]) => void\n  error: (...args: unknown[]) => void\n  success: (...args: unknown[]) => void\n}\n\n/** @internal */\nexport function createLogger(): Logger {\n  return {\n    /* eslint-disable no-console */\n    log: (...args) => {\n      console.log(...args)\n    },\n    info: (...args) => {\n      console.log(chalk.blue('[info]'), ...args)\n    },\n    warn: (...args) => {\n      console.log(chalk.yellow('[warning]'), ...args)\n    },\n    error: (...args) => {\n      console.log(chalk.red('[error]'), ...args)\n    },\n    success: (...args) => {\n      console.log(chalk.green('[success]'), ...args)\n    },\n    /* eslint-enable no-console */\n  }\n}\n"],"names":["statSync","z","chalk"],"mappings":";;;;;;AAGO,SAAS,WAAW,UAA2B;AAChD,MAAA;AACF,WAAAA,GAAA,SAAS,QAAQ,GAEV;AAAA,EAAA,QACG;AACH,WAAA;AAAA,EAAA;AAEX;ACVO,SAAS,SAAS,OAAkD;AAClE,SAAA,CAAA,CAAQ,SAAU,CAAC,MAAM,QAAQ,KAAK,KAAK,OAAO,SAAU;AACrE;ACCA,MAAM,YAAYC,MAAE,OAAO;AAAA,EACzB,MAAMA,IAAAA,EAAE,SAASA,IAAA,EAAE,KAAK,CAAC,YAAY,QAAQ,CAAC,CAAC;AAAA,EAC/C,MAAMA,MAAE,OAAO;AAAA,EACf,SAASA,MAAE,OAAO;AAAA,EAClB,SAASA,MAAE,OAAO;AAAA,EAClB,KAAKA,MAAE,SAASA,IAAAA,EAAE,OAAOA,IAAE,EAAA,OAAA,CAAQ,CAAC;AAAA,EACpC,cAAcA,MAAE,SAASA,IAAAA,EAAE,OAAOA,IAAE,EAAA,OAAA,CAAQ,CAAC;AAAA,EAC7C,iBAAiBA,MAAE,SAASA,IAAAA,EAAE,OAAOA,IAAE,EAAA,OAAA,CAAQ,CAAC;AAAA,EAChD,kBAAkBA,MAAE,SAASA,IAAAA,EAAE,OAAOA,IAAE,EAAA,OAAA,CAAQ,CAAC;AAAA,EACjD,QAAQA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,EAC7B,MAAMA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,EAC3B,SAASA,MAAE,SAASA,IAAAA,EAAE,OAAOA,IAAE,EAAA,OAAA,CAAQ,CAAC;AAAA,EACxC,QAAQA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,EAC7B,OAAOA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,EAC5B,SAASA,IAAE,EAAA;AAAA,IACTA,IAAAA,EAAE;AAAA,MACAA,IAAAA,EAAE,MAAM;AAAA,QACNA,MAAE,OAA2B,CAAC,QAAQ,iBAAiB,KAAK,GAAa,CAAC;AAAA,QAC1EA,MAAE,OAA0B,CAAC,QAAQ,gBAAgB,KAAK,GAAa,CAAC;AAAA,QACxEA,IAAAA,EAAE,OAAO;AAAA,UACP,OAASA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,UAC9B,QAAUA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,UAC/B,SAAWA,IAAE,EAAA;AAAA,YACXA,IAAAA,EAAE,OAAO;AAAA,cACP,QAAQA,MAAE,OAAO;AAAA,cACjB,QAAQA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,cAC7B,SAASA,IAAA,EAAE,SAASA,IAAAA,EAAE,OAAQ,CAAA;AAAA,YAC/B,CAAA;AAAA,UACH;AAAA,UACA,kBAAkBA,IAAE,EAAA;AAAA;AAAA;AAAA;AAAA,YAIlBA,IAAAA,EAAE,OAAO;AAAA,cACP,QAAQA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,cAC7B,SAASA,MAAE,OAAO;AAAA,YACnB,CAAA;AAAA;AAAA,UAEH;AAAA,UACA,MAAQA,IAAE,EAAA;AAAA,YACRA,IAAAA,EAAE,OAAO;AAAA,cACP,QAAQA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,cAC7B,QAAQA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,cAC7B,SAASA,IAAA,EAAE,SAASA,IAAAA,EAAE,OAAQ,CAAA;AAAA,YAC/B,CAAA;AAAA,UACH;AAAA,UACA,QAAUA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,UAC/B,SAAWA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,UAChC,SAAWA,MAAE,OAAO;AAAA,QAAA,CACrB;AAAA,QACDA,IAAAA,EAAE,OAAO;AAAA,UACP,OAAOA,IAAAA,EAAE,SAASA,IAAA,EAAE,QAAQ;AAAA,UAC5B,QAAQA,MAAE,OAAO;AAAA,UACjB,SAASA,IAAA,EAAE,SAASA,IAAAA,EAAE,OAAQ,CAAA;AAAA,QAC/B,CAAA;AAAA,MACF,CAAA;AAAA,IAAA;AAAA,EAEL;AAAA,EACA,cAAcA,IAAAA,EAAE,SAASA,IAAAA,EAAE,MAAM,CAACA,IAAE,EAAA,OAAA,GAAUA,IAAAA,EAAE,MAAMA,IAAAA,EAAE,OAAQ,CAAA,CAAC,CAAC,CAAC;AAAA,EACnE,aAAaA,IAAAA,EAAE,SAASA,IAAAA,EAAE,MAAM,CAACA,IAAE,EAAA,QAAA,GAAWA,IAAAA,EAAE,MAAMA,IAAAA,EAAE,OAAQ,CAAA,CAAC,CAAC,CAAC;AAAA;AAAA,EAEnE,eAAeA,IAAA,EAAE,SAASA,IAAAA,EAAE,IAAK,CAAA;AACnC,CAAC,GAGK,UAAU,oBAAI,IAAoB;AAExC,WAAW,OAAO,UAAU,MAAM,EAAE,KAAK;AACvC,UAAQ,IAAI,IAAI,YAAY,GAAG,GAAG;AAG7B,SAAS,YAAY,OAA6B;AACvD,QAAM,MAAM,UAAU,MAAM,KAAK,GAE3B,aAAa,OAAO,KAAK,KAAoB,EAAE,KAAK,CAAC,QAAQ;AAC3D,UAAA,SAAS,IAAI,YAAY;AAExB,WAAA,QAAQ,IAAI,MAAM,IAAI,QAAQ,IAAI,MAAM,MAAM,MAAM;AAAA,EAAA,CAC5D;AAEG,MAAA;AACF,UAAM,IAAI;AAAA,MACR;AAAA,mBACa,UAAU,uCAAuC,QAAQ,IAAI,WAAW,YAAa,CAAA,CAAC;AAAA,IACrG;AAGK,SAAA;AACT;AChFO,SAAS,eAAuB;AAC9B,SAAA;AAAA;AAAA,IAEL,KAAK,IAAI,SAAS;AACR,cAAA,IAAI,GAAG,IAAI;AAAA,IACrB;AAAA,IACA,MAAM,IAAI,SAAS;AACjB,cAAQ,IAAIC,eAAM,QAAA,KAAK,QAAQ,GAAG,GAAG,IAAI;AAAA,IAC3C;AAAA,IACA,MAAM,IAAI,SAAS;AACjB,cAAQ,IAAIA,eAAM,QAAA,OAAO,WAAW,GAAG,GAAG,IAAI;AAAA,IAChD;AAAA,IACA,OAAO,IAAI,SAAS;AAClB,cAAQ,IAAIA,eAAM,QAAA,IAAI,SAAS,GAAG,GAAG,IAAI;AAAA,IAC3C;AAAA,IACA,SAAS,IAAI,SAAS;AACpB,cAAQ,IAAIA,eAAM,QAAA,MAAM,WAAW,GAAG,GAAG,IAAI;AAAA,IAAA;AAAA;AAAA,EAGjD;AACF;;;;;"}