{"version":3,"file":"cli.cjs","sources":["../src/cli/index.ts"],"sourcesContent":["import cac from 'cac'\n\nimport {version} from '../../package.json'\n\nconst cli = cac()\n\ncli\n  .command('', 'Check')\n  .alias('check') // alias to align with the action name\n  .option('--strict', 'Strict mode')\n  .option('--tsconfig [tsconfig]', '[string] tsconfig.json')\n  .action(async (options) => {\n    const {checkAction} = await import('./checkAction')\n\n    return checkAction(options)\n  })\n\ncli\n  .command('build', 'Build package')\n  .option('--emitDeclarationOnly', 'Emit d.ts only')\n  .option('--strict', 'Strict mode')\n  .option('--tsconfig [tsconfig]', '[string] tsconfig.json')\n  .option('--check', 'Run the check command after build (same as running `pkg build && pkg check`)')\n  .option('--clean', 'Clean the dist directory before building')\n  .action(async (options) => {\n    const {check = false, ...buildOptions} = options\n    const {buildAction} = await import('./buildAction')\n\n    await buildAction(buildOptions)\n\n    if (check) {\n      const {checkAction} = await import('./checkAction')\n\n      await checkAction({\n        strict: options.strict,\n        tsconfig: options.tsconfig,\n      })\n    }\n  })\n\ncli.command('init [path]', 'Initialize package').action(async (p) => {\n  const {initAction} = await import('./initAction')\n\n  return initAction({\n    path: p,\n  })\n})\n\ncli\n  .command('watch', 'Watch package')\n  .option('--strict', 'Strict mode')\n  .option('--tsconfig [tsconfig]', '[string] tsconfig.json')\n  .action(async (options) => {\n    const {watchAction} = await import('./watchAction')\n\n    return watchAction(options)\n  })\n\n// Display help message when `-h` or `--help` appears\ncli.help()\n\n// Display version number when `-v` or `--version` appears\n// It's also used in help message\ncli.version(version)\n\ncli.parse()\n"],"names":["cac"],"mappings":";;;;;;AAIA,MAAM,MAAMA,aAAAA,QAAI;AAEhB,IACG,QAAQ,IAAI,OAAO,EACnB,MAAM,OAAO,EACb,OAAO,YAAY,aAAa,EAChC,OAAO,yBAAyB,wBAAwB,EACxD,OAAO,OAAO,YAAY;AACzB,QAAM,EAAC,YAAA,IAAe,MAAM,QAAA,QAAA,EAAA,KAAA,WAAA;AAAA,WAAA,QAAO,+BAAe;AAAA,EAAA,CAAA;AAElD,SAAO,YAAY,OAAO;AAC5B,CAAC;AAEH,IACG,QAAQ,SAAS,eAAe,EAChC,OAAO,yBAAyB,gBAAgB,EAChD,OAAO,YAAY,aAAa,EAChC,OAAO,yBAAyB,wBAAwB,EACxD,OAAO,WAAW,8EAA8E,EAChG,OAAO,WAAW,0CAA0C,EAC5D,OAAO,OAAO,YAAY;AACzB,QAAM,EAAC,QAAQ,IAAO,GAAG,aAAY,IAAI,SACnC,EAAC,YAAW,IAAI,MAAM,QAAA,QAAA,EAAA,KAAA,WAAA;AAAA,WAAA,QAAO,+BAAe;AAAA,EAAA,CAAA;AAIlD,MAFA,MAAM,YAAY,YAAY,GAE1B,OAAO;AACT,UAAM,EAAC,YAAA,IAAe,MAAM,QAAA,QAAA,EAAA,KAAA,WAAA;AAAA,aAAA,QAAO,+BAAe;AAAA,IAAA,CAAA;AAElD,UAAM,YAAY;AAAA,MAChB,QAAQ,QAAQ;AAAA,MAChB,UAAU,QAAQ;AAAA,IAAA,CACnB;AAAA,EAAA;AAEL,CAAC;AAEH,IAAI,QAAQ,eAAe,oBAAoB,EAAE,OAAO,OAAO,MAAM;AACnE,QAAM,EAAC,WAAA,IAAc,MAAM,QAAA,QAAA,EAAA,KAAA,WAAA;AAAA,WAAA,QAAO,8BAAc;AAAA,EAAA,CAAA;AAEhD,SAAO,WAAW;AAAA,IAChB,MAAM;AAAA,EAAA,CACP;AACH,CAAC;AAED,IACG,QAAQ,SAAS,eAAe,EAChC,OAAO,YAAY,aAAa,EAChC,OAAO,yBAAyB,wBAAwB,EACxD,OAAO,OAAO,YAAY;AACzB,QAAM,EAAC,YAAA,IAAe,MAAM,QAAA,QAAA,EAAA,KAAA,WAAA;AAAA,WAAA,QAAO,+BAAe;AAAA,EAAA,CAAA;AAElD,SAAO,YAAY,OAAO;AAC5B,CAAC;AAGH,IAAI,KAAK;AAIT,IAAI,QAAQ,OAAO;AAEnB,IAAI,MAAM;"}